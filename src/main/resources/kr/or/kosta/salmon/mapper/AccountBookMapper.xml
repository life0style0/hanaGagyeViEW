<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.kosta.salmon.mapper.AccountBookMapper">

        <resultMap type="kr.or.kosta.salmon.domain.AccountBookDTO" id="AccountBookToGgv">
                <result property="articleId" column="article_id"/>
                <result property="articleScope" column="article_scope"/>
                <result property="articleRegdate" column="article_regdate"/>
                <result property="articlePaymentType" column="article_payment_type"/>
                <result property="articlePaymentFee" column="article_payment_fee"/>
                <result property="articleTitle" column="article_title"/>
                <result property="articleContent" column="article_content"/>
                <result property="articleCtgryType" column="article_ctgry_type"/>
                <collection property="ctgryNames" column="article_id" javaType="java.util.ArrayList" ofType="string" select="getCtgryName"/>
                <collection property="imagePaths" column="article_id" javaType="java.util.ArrayList" ofType="string" select="getImages"/>
                <collection property="hashtags" column="article_id" javaType="java.util.ArrayList" ofType="string" select="getHashtagByArticleId"/>
        </resultMap>

        <resultMap type="kr.or.kosta.salmon.domain.AccountBookDTO" id="AccountBooks">
                <result property="articleId" column="article_id"/>
                <result property="articleScope" column="article_scope"/>
                <result property="articleRegdate" column="article_regdate"/>
                <result property="articlePaymentType" column="article_payment_type"/>
                <result property="articlePaymentFee" column="article_payment_fee"/>
                <result property="articleTitle" column="article_title"/>
                <result property="articleContent" column="article_content"/>
                <result property="articleCtgryType" column="article_ctgry_type"/>
                <result property="likeCnt" column="article_like_num"/>
                <result property="commentCnt" column="article_comment_num"/>
                <result property="userId" column="user_id"/>
                <result property="checkLike" column="checkLike"/>
                <association property="userPsns" column="user_id" javaType="kr.or.kosta.salmon.domain.PsnsDTO" select="getPsnsUser"/>
                <collection property="ctgryNames" column="article_id" javaType="java.util.ArrayList" ofType="string" select="getCtgryName"/>
                <collection property="comments" column="article_id" javaType="java.util.ArrayList" ofType="kr.or.kosta.salmon.domain.CommentDTO" select="getComments"/>
                <collection property="imagePaths" column="article_id" javaType="java.util.ArrayList" ofType="string" select="getImages"/>
                <collection property="hashtags" column="article_id" javaType="java.util.ArrayList" ofType="string" select="getHashtagByArticleId"/>
        </resultMap>

        <resultMap type="kr.or.kosta.salmon.domain.PsnsDTO" id="Psns">
                <result property="psnMonthlyPayment" column="psn_monthly_payment"/>
                <result property="psnMonthStart" column="psn_month_start"/>
        </resultMap>

        <select id="getAccountBooks" resultMap="AccountBooks">
select "ar".article_id "article_id", 
       ctgry_name, 
       article_scope, 
       To_char(article_regdate, 'YYYY"년" MM"월" DD"일" AM HH"시" mm"분"') "article_regdate", 
       article_payment_type, 
       article_payment_fee, 
       article_title, 
       article_content, 
       article_ctgry_type,
       article_like_num,
       article_comment_num,
       "ar".user_id "user_id",
       (SELECT count(like_id)
FROM likes "li"
WHERE "li".user_id = #{userId}
        and "li".article_id = "ar".article_id) "checkLike"
from (SELECT article_id, 
       ctgry_name, 
       article_scope, 
       article_regdate, 
       article_payment_type, 
       article_payment_fee, 
       article_title, 
       article_content, 
       article_ctgry_type,
       article_like_num,
       article_comment_num,
       user_id       
FROM   articles 
       join ctgry_values USING(article_id) 
       join ctgries USING(ctgry_id) 
       join article_ctgries USING(article_ctgry_id), 
       (SELECT trim(to_char(psn_month_start,'00')) "pms1" ,trim(to_char(psn_month_start-1,'00')) "pms2"
        FROM   psns 
        WHERE  user_id = #{userId}) 
WHERE  user_id = #{userId}
        AND article_deleted = 'N'
       AND To_char(article_regdate, 'YYYY-MM-DD') BETWEEN #{year}
                                                          ||'-' 
                                                          ||#{month}
                                                          ||'-' 
                                                          ||"pms1" AND #{year2} 
                                                                      ||'-' 
                                                                      ||(#{month2})
                                                                      ||'-' 
                                                                      ||"pms2" 
       AND article_ctgry_type IN ( 'income', 'spend' ) 
ORDER  BY article_regdate) "ar"
        </select>

        <select id="getImages" resultType="string">
SELECT image_path
FROM images where article_id = #{article_id}
        </select>

        <select id="getAccountBookByArticleId" resultMap="AccountBooks">
SELECT article_id,
       ctgry_name,
       article_scope,
       to_char(article_regdate,'YYYY"년" MM"월" DD"일" AM HH"시" mm"분"') "article_regdate",
       article_payment_type,
       article_payment_fee,
       article_title,
       article_content,
        article_ctgry_type,
       article_like_num,
       article_comment_num,
       user_id,
       (SELECT count(like_id)
FROM likes
WHERE user_id = #{userId}
        and article_id = #{articleId}) "checkLike"
FROM   articles 
        join ctgry_values USING(article_id) 
        join ctgries USING(ctgry_id)
        join article_ctgries using(article_ctgry_id)
WHERE  article_id = #{articleId}
        AND article_deleted = 'N'
        </select>

        <select id="getHashtagByArticleId" resultType="string">
SELECT hashtag_value 
FROM   hashtag_refs 
       join hashtags USING(hashtag_id) 
WHERE  article_id = #{articleId}        
        </select>

        <select id="getCtgryName" resultType="string">
SELECT ctgry_name 
FROM   ctgry_values "cv" 
       join ctgries "ct" 
         ON "cv".ctgry_id = "ct".ctgry_id 
WHERE  article_id = #{articleId}
        </select>

        <select id="getAccountBooksByYear" resultMap="AccountBooks">
SELECT article_id,
       ctgry_name,
       article_scope,
       to_char(article_regdate,'YYYY"년" MM"월" DD"일" AM HH"시" mm"분"') "article_regdate",
       article_payment_type,
       article_payment_fee,
       article_title,
       article_content,
        article_ctgry_type,
       article_like_num,
       article_comment_num,
       user_id
FROM   articles 
        join ctgry_values USING(article_id) 
        join ctgries USING(ctgry_id)
        join article_ctgries using(article_ctgry_id),
        (SELECT trim(to_char(psn_month_start,'00')) "pms1" ,trim(to_char(psn_month_start-1,'00')) "pms2"
        FROM   psns 
        WHERE  user_id = #{userId}) 
WHERE  user_id = #{userId}
        AND article_deleted = 'N'
       AND To_char(article_regdate, 'YYYY-MM-DD') BETWEEN #{year}
                                                          ||'-' 
                                                          ||#{month}
                                                          ||'-' 
                                                          ||"pms1" AND #{year2} 
                                                                      ||'-' 
                                                                      ||#{month2}
                                                                      ||'-' 
                                                                      ||"pms2"
       AND article_ctgry_type IN ('income','spend')
ORDER BY article_regdate        
        </select>

        <select id="getYearMonth" resultType="string">
SELECT "year" 
FROM  (SELECT To_char(article_regdate, 'YYYY-MM') "year" 
       FROM   articles 
       WHERE  user_id = #{userId}) 
GROUP  BY "year"
order by "year" desc
        </select>

        <select id="getPsnMonthStart" resultType="int">
SELECT psn_month_start "psnMonthStart" 
FROM   psns 
WHERE  user_id = #{userId}
        </select>

        <select id="getPsns" resultMap="Psns">
SELECT psn_monthly_payment,
        psn_month_start
FROM   psns 
WHERE  user_id = #{userId}
        </select>

        <update id="editPsns">
UPDATE psns
                <set>
                        <if test="psns.psnMonthlyPayment != null">psn_monthly_payment=#{psns.psnMonthlyPayment},</if>
                        <if test="psns.psnMonthStart != null">psn_month_start=#{psns.psnMonthStart},</if>
                </set>
WHERE user_id = #{userId}
        </update>

        <update id="shareArticle">
UPDATE articles
set article_scope = 'u'
where article_id = #{articleId} and user_id = #{userId}
        </update>

        <update id="shareCancelArticle">
UPDATE articles
set article_scope = 'r'
where article_id = #{articleId} and user_id = #{userId}
        </update>

        <select id="getComments" resultType="kr.or.kosta.salmon.domain.CommentDTO">
SELECT comment_id, 
       comment_content, 
       to_char(comment_regdate,'YYYY"년" MM"월" DD"일" AM hh:mm') "comment_regdate", 
       user_id, 
       user_image,
       user_nickname 
FROM   comments left outer join users using(user_id)
WHERE  article_id = #{articleId}
order by comment_regdate asc
        </select>

        <select id="getPsnsUser" resultType="kr.or.kosta.salmon.domain.PsnsDTO">
SELECT psn_id "psnId", 
       user_id "userId",
       user_nickname "userNickname",
       user_image "userImage",
       (SELECT ctgry_name 
        FROM   ctgries 
        WHERE  ctgry_id = ctgry_1) "ctgryName1", 
       (SELECT ctgry_name 
        FROM   ctgries 
        WHERE  ctgry_id = ctgry_2) "ctgryName2", 
       (SELECT ctgry_name 
        FROM   ctgries 
        WHERE  ctgry_id = ctgry_3) "ctgryName3"
FROM   psns join users using(user_id)
WHERE user_id = #{userId}
        </select>

        <select id="checkLike" resultType="int">
SELECT count(like_id)
FROM likes
WHERE user_id = #{userId}
        and article_id = #{articleId}
        </select>

</mapper>